/*Used for Video Background*/
.section {
  /*positioned to its normal position*/
  position: absolute;
  width: 100%;
  /*depending on the view-port height, it will keep it adjust the video accordingly */
  height: 100vh;
  display: flex;
  margin: 0px;
  left: 0px;
  top: 60px;
  background-color: black;
  align-items: top;
  justify-content: top;
  /*hides the scroll-bars*/
  overflow: hidden;
}

h1.welcome {
  /*positioned to its normal position*/
  position: relative;
  background-position: center;
  font-size: 3em;
  width: 100%;
  /*depending on the view-port height, it will keep it adjust the video accordingly */
  display: flex;
  font-family: "Impact", "Franklin Gothic Medium", "Arial Narrow", "sans-serif";
  color: white;
  background-color: black;
  margin: 0;
  left: 0;
  z-index: 1;
  align-items: top;
  justify-content: center;
}

/*Used for Video Background*/
.video-container {
  /*positioned relative to the .section*/
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
}

/*Used for Video Background*/
.color-overlay {
  /*positioned relative to the .video-container*/
  position: absolute;
  top: 0;
  left: 0;
  background-color: lightgrey;
  width: 100%;
  height: 100vh;
  opacity: 0.1;
}

body {
  /*space between the rows*/
  line-height: 1.5;
  font-family: sans-serif;
  background-color: #ffffff;
}

/*all elements will take this position*/
* {
  /*allows the positioning values to be relative to the content*/
  box-sizing: content-box;
  /*Takes up the whole screen (from the absolute left side of the screen)*/
  margin: 0;
  padding: 10;
}
a {
  /*no declarative lines in the navigation bar (no underlines)*/
  text-decoration: none;
}
ul {
  /*no list style for the navigation bar*/
  list-style: none;
  font-weight: lighter;
}
/*defining the size of the main container*/
.container {
  max-width: 1600px;
  /*browser calculates the margin*/
  margin: auto;
}
.row {
  display: flex;
  /*items break into multiple lines*/
  flex-wrap: wrap;
}

.justify-content-between {
  justify-content: space-between;
}
/*defining the color of the navigation bar and dimensions*/
.header {
  background-color: black;
  padding: 12px 0;
  position: relative;
}
/*used to define the size of the logo in the navigation bar*/
.logo {
  width: 30px;
  height: 30px;
}
/*Structured the arrangement of the logo and navigation links*/
.header .logo,
.header .nav {
  padding: 0 15px;
}

/*Used for navigation bar*/
.header .nav ul li {
  /*defining the navigation bar as one block (row)*/
  display: inline-block;
  /*distance between each navigation link*/
  margin-left: 40px;
}

/*adjusting the text sytle of the navigation bar*/
.header .nav ul li a {
  display: block;
  font-size: 16px;
  /*adjusting the dimensions of the whole black shape of the navigation bar */
  padding: 5px 0;
  color: rgba(255, 255, 255, 0.7);
  transition: all 0.5s ease;
}
/*If we hover a certain page or a page has been clicked, make the name of the page 
in the navigation bar bold white to indicate what page the user is in*/
.header .nav ul li a:hover,
.header .nav ul li a.active {
  color: #ffffff;
}

/*Defining the style of details for the statisitc webpage*/
.LBJ_History {
  border: 10px;
  font-size: 22px;
  display: flex;
  margin: 10px;
  padding: 5px;
  flex-direction: column;
}

/*Defining the top hierachy of the statisitc webpage*/
h1.top {
  font-weight: heavy;
  font-family: "Trebuchet MS";
  font-size: xx-large;
  padding: 15px;
  text-align: center;
}

/*Defining the second hierachy of the statisitc webpage*/
h2.top {
  font-weight: heavy;
  font-family: "Trebuchet MS";
  font-size: x-large;
  margin: 13px;
}

img.lebrondunk {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

/*Defining/stylng the table grid with a gray color*/
.tg {
  border-collapse: collapse;
  border-color: #ccc;
  border-style: groove;
  border-width: 1px;
  border-spacing: 12;
  font-family: Arial, sans-serif;
  margin: 50px;
  padding: 10px 5px;
}

/*Defining the table grid for the data */
.tg td {
  background-color: #fff;
  border-color: #ccc;
  border-style: groove;
  border-width: 1px;
  color: #333;
  border-spacing: 12;
  font-family: Arial, sans-serif;
  font-size: 14px;
  overflow: hidden;
  padding: 10px 5px;
  word-break: normal;
}
.tg .th {
  background-color: #f0f0f0;
  border-color: #ccc;
  border-style: solid;
  border-width: 1px;
  border-spacing: 12;
  border-style: groove;
  color: #333;
  font-family: Arial, sans-serif;
  font-size: 14px;
  font-weight: normal;
  overflow: hidden;
  /*defining the length and width of each cell*/
  padding: 10px 5px;
  word-break: normal;
}

/*Defining the style of the table header of the table*/
.tg .table_head_footer {
  background-color: #8d8d8d80;
  border-color: inherit;
  border-width: 1px;
  border-style: groove;
  border-spacing: 12;
  font-weight: bold;
  text-align: center;
  vertical-align: top;
  padding: 10px 5px;
  word-break: normal;
}

/*Defining the style of the row of categories (second row) and the last row of the table*/
.tg .table_categories {
  background-color: #ebe6eaa4;
  font-weight: bold;
  border-width: 1px;
  border-color: #9b9b9b;
  font-style: italic;
  border-style: groove;
  font-weight: bold;
  border-spacing: 12;
  text-align: center;
  vertical-align: top;
  padding: 10px 5px;
  word-break: normal;
}

/*Defining the style of one row of the table (no shade)*/
.tg .table_row1 {
  border-color: #c0c0c0;
  text-align: center;
  border-width: 1px;
  vertical-align: top;
  border-spacing: 12;
  border-style: groove;
  padding: 10px 5px;
  word-break: normal;
}

/*Defining the style of one row of the table (with a shade)*/
.tg .table_row2 {
  background-color: #f9f9f9;
  border-color: #c0c0c0;
  border-width: 1px;
  text-align: center;
  border-spacing: 12;
  vertical-align: top;
  border-style: groove;
  padding: 10px 5px;
  word-break: normal;
}

/*
The display property was used to display elements in a block-level grid container
The grid-gap property defined the size of the gap between the rows and columns in a grid layout
The grid-template-columns property was used to indicate I wanted 3 columns in the grid layout 
(meaning 7 items in each of the 3  columns)
*/
.glossary-grid {
  font-size: smaller;
  display: grid;
  grid-gap: 25px;
  grid-template-columns: repeat(4, 1fr);
  margin: 10px;
  padding: 10px;
}

/*Shop.html*/
/*Styling pictures and linkgs in a side-by-side structure*/
.contentRow {
  display: flex;
}
.contentColumn {
  flex: 33.3%;
  padding: 5px;
}
.shop {
  box-sizing: border-box;
  margin: 50px;
  text-align: center;
}
.productInfo {
  text-decoration: none;
  font-weight: normal;
  font-family: inherit;
}

/*Used the pseudo class to remove the appearance of decorative lines and color of links*/
a:visited {
  text-decoration: none;
  color: black;
}

label {
  padding-right: 10px;
  font-size: 1rem;
}

footer {
  border-top: 1px solid gray;
  text-align: center;
  font-family: inherit;
  font-size: 0.8em;
  line-height: 2em;
  margin-top: 1em;
}

/*Shop.html*/
.slider {
  /*For the image to stay within the page (not scrolling to the side)*/
  overflow: hidden;
}

.slider figure {
  position: relative;
  /*Chose 500% width becasue we want 5 images next to eachother horizontally (100% per picture)*/
  width: 500%;
  /*pushed all the way to the left and minimize the space above it*/
  margin: 0;
  left: 0;
  /*Using a  CSS3 style annimation*/
  /*Choose 20s for the entire slideshow*/
  /*slider: it chooses the keyframe that we identified along with its properties*/
  /*infinite: the slideshow will keep sliding in an infinite loop and not stop*/
  animation: 20s slider infinite;
}

.slider figure img {
  /* 100% divided by 5 images = 20% & images would we stacked horizontally next to eachother*/
  width: 20%;
  /*images floats to the left*/
  float: left;
}

/*allows CSS animation to move elements along the page by giving different pixel amounts/percentages (allows to animate slider)*/
@keyframes slider {
  /*In the beginning of the slide, we want it to stay on the first slide*/
  0% {
    left: 0;
  }
  /*Due to the fact that our first image is 20%, we keep it as our first appearing image*/
  20% {
    left: 0;
  }
  /*Shift 100% to the right to get it to shift*/
  25% {
    left: -100%;
  }
  /*Stays at the second picture*/
  45% {
    left: -100%;
  }
  /*Shifts to the third picture*/
  50% {
    left: -200%;
  }
  /*Due to the fact that our third image is also 20%, we keep it as our third appearing image*/
  70% {
    left: -200%;
  }
  /*Shifts to the fourth image*/
  75% {
    left: -300%;
  }
  /*Due to the fact that our fourth image is also 20%, we keep it as our fourth appearing image*/
  95% {
    left: -300%;
  }
  /*Jumps all the way to the left which is the first slide. This is why I put the first image twice in the figure element */
  100% {
    left: -400%;
  }
}

.flowRight {
  float: right;
  margin-left: 20px;
  left: 20px;
}

a.trivia {
  text-decoration: lightskyblue;
  color: blue;
}

.dunk-videos {
  text-align: center;
}
